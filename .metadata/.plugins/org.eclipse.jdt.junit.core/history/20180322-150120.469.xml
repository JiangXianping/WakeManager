<?xml version="1.0" encoding="UTF-8"?><testrun name="JedisTest.testJedisCluster" project="taotao-rest" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testcase name="testJedisCluster" classname="com.taotao.rest.jedis.JedisTest" time="2.241">
    <error>redis.clients.jedis.exceptions.JedisClusterException: CLUSTERDOWN The cluster is down&#13;
	at redis.clients.jedis.Protocol.processError(Protocol.java:115)&#13;
	at redis.clients.jedis.Protocol.process(Protocol.java:142)&#13;
	at redis.clients.jedis.Protocol.read(Protocol.java:196)&#13;
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:288)&#13;
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:207)&#13;
	at redis.clients.jedis.Connection.getBulkReply(Connection.java:196)&#13;
	at redis.clients.jedis.Jedis.get(Jedis.java:98)&#13;
	at redis.clients.jedis.JedisCluster$3.execute(JedisCluster.java:94)&#13;
	at redis.clients.jedis.JedisCluster$3.execute(JedisCluster.java:91)&#13;
	at redis.clients.jedis.JedisClusterCommand.runWithRetries(JedisClusterCommand.java:56)&#13;
	at redis.clients.jedis.JedisClusterCommand.runWithRetries(JedisClusterCommand.java:67)&#13;
	at redis.clients.jedis.JedisClusterCommand.run(JedisClusterCommand.java:29)&#13;
	at redis.clients.jedis.JedisCluster.get(JedisCluster.java:91)&#13;
	at com.taotao.rest.jedis.JedisTest.testJedisCluster(JedisTest.java:58)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:497)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
  </testcase>
</testrun>
