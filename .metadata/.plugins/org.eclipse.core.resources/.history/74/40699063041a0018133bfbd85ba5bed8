package com.taotao.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.taotao.common.pojo.EUDataResult;
import com.taotao.common.utils.JsonUtils;
import com.taotao.common.utils.TaotaoResult;
import com.taotao.pojo.TbItem;
import com.taotao.service.ItemService;

@Controller
public class ItemController {

	@Autowired
	private ItemService itemService;
	
	@RequestMapping("/item/{itemid}")
	@ResponseBody
	public TbItem getItemById(@PathVariable Long itemid){
		TbItem tbItem = itemService.getItemById(itemid);
		return tbItem;
	}
	/**
	 * 获取列表
	 * @param page
	 * @param rows
	 * @return
	 */
	@RequestMapping("/item/list")
	@ResponseBody
	public EUDataResult getItemList(@RequestParam("page") Integer page
			,@RequestParam("rows") Integer rows
			,HttpServletRequest request){
		return itemService.getItemList(page, rows);
	}
	
	@RequestMapping("/getAllList")
	@ResponseBody
	public List<TbItem> getAllList(){
		return this.itemService.getAllList();
	}
	
	@RequestMapping(value="/item/save",method=RequestMethod.POST)
	@ResponseBody
	public TaotaoResult createItem(TbItem item){
		return itemService.createItem(item);
	}
	
	@RequestMapping(value="/rest/item/update",method=RequestMethod.POST)
	@ResponseBody
	public TaotaoResult updateItem(TbItem item){
		return itemService.updateItem(item);
	}
	
	@RequestMapping(value="/rest/item/delete",method=RequestMethod.POST)
	@ResponseBody
	public TaotaoResult deleteItem(@RequestParam("ids")Long itemId){
		return itemService.deleteItem(itemId);
	}
	
	@RequestMapping("/rest/item/query/item/desc/{itemid}")
	@ResponseBody
	public TbItem geTbItemByid(@PathVariable Long itemid){	
		return itemService.getItemById(itemid);
	}
}